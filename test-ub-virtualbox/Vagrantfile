# -*- mode: ruby -*-
# vi: set ft=ruby :

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/bionic64"
  config.vm.hostname = 'dev.vagrant.test-ub'
  config.vm.box_check_update = false
  config.vm.provider "virtualbox"

  config.vm.network "private_network", ip: "192.168.56.111"

  config.vm.provider 'virtualbox' do |vb|
    vb.gui = false
    vb.memory = '2048'
    vb.name = 'test-ub'
  end

  # vagrant plugin
  # omnibus
  config.omnibus.chef_version = :latest
  # config.omnibus.cache_packages = false
  ## berkshelf
  # config.berkshelf.enabled = true
  # config.berkshelf.berksfile_path = './chef-work/Berksfile'



  config.vm.provision "chef_zero" do |chef|
    # Specify the local paths where Chef data is stored
    chef.cookbooks_path = "cookbooks"
    chef.data_bags_path = "data_bags"
    chef.nodes_path = "nodes"
    chef.roles_path = "roles"

    # Add a recipe
    chef.add_recipe "apache"

    # Or maybe a role
    chef.add_role "web"
  end

  config.vm.provision :chef_solo do |chef|
    chef.cookbooks_path = ['../chef-work']
    chef.add_recipe 'chef-work'
    chef.run_list = [
      'recipe[chef-work:mysql]',
    ]
    # chef.cookbooks_path = ['./cookbooks']
    # chef.run_list = [
    #     'recipe[apache2]',
    #     'recipe[apache2::mod_php5]',
    #     'recipe[mysql::client]',
    #     'recipe[mysql::server]',
    #     'recipe[php]',
    #     'recipe[php::module_mysql]'
    # ]
    # https://stackoverflow.com/questions/15373209/issue-with-chef-knife-bootstrapping-a-vagrant-vm
    # chef.add_recipe 'mysql::server'
  end
end
