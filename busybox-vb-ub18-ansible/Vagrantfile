# -*- mode: ruby -*-
# vi: set ft=ruby :

# RUBY_V = File.open("../.ruby-version") { |f| f.read }.chomp

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/bionic64"
  config.vm.hostname = 'busybox-vb-ub18-ansible'
  config.vm.box_check_update = false

  # config.vm.synced_folder '../data', '/vagrant_data'
  config.vm.network "private_network", ip: "192.168.56.101"

  config.vm.provider 'virtualbox' do |vb|
    vb.gui = false
    vb.memory = '4096'
    vb.name = 'busybox-vb-ub18-script'
  end

  config.vm.provision 'shell', inline: <<-SHELL
    # sed -i 's/http:\/\/archive.ubuntu.com//http:\/\/ftp.daumkakao.com//' /etc/apt/sources.list
    sed -i 's@http://archive.ubuntu.com@http://mirror.kakao.com@g' /etc/apt/sources.list
    sed -i 's@http://us.archive.ubuntu.com@http://mirror.kakao.com@g' /etc/apt/sources.list
    sed -i 's@http://kr.archive.ubuntu.com@http://mirror.kakao.com@g' /etc/apt/sources.list
    sed -i 's@http://security.ubuntu.com@http://mirror.kakao.com@g' /etc/apt/sources.list
    apt-get update -qq && apt-get upgrade -y
    apt-get install -y git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev python-software-properties libffi-dev

    export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" && \
    echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | tee -a /etc/apt/sources.list.d/google-cloud-sdk.list && \
    curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add - && \
    apt-get update && apt-get install -y google-cloud-sdk

    # docker
    apt install -y apt-transport-https ca-certificates curl software-properties-common
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
    add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
    apt update

    apt install -y docker-ce docker-ce-cli containerd.io docker-compose

    # to install gem pg
    apt install -y libpq-dev libmysqlclient-dev
    usermod -aG docker vagrant
  SHELL

  config.ssh.forward_agent = true

  config.vm.provision "ansible" do |ansible|
    ansible.playbook = "playbook.yml"
  end
end
