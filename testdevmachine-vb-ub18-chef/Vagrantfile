# -*- mode: ruby -*-
# vi: set ft=ruby :

RUBY_V = File.open("../.ruby-version") { |f| f.read }.chomp
Vagrant.require_version ">= 1.7.0"

Vagrant.configure("2") do |config|
  config.vm.box = "ubuntu/bionic64"
  config.vm.hostname = 'dev.vagrant.chef-work'
  config.vm.box_check_update = false
  config.vm.provider "virtualbox"

  config.vm.network "private_network", ip: "192.168.56.121"

  config.vm.provider 'virtualbox' do |vb|
    vb.gui = false
    vb.memory = '4096'
    vb.name = 'chef-work'
  end


  config.vm.provision 'shell', inline: <<-SHELL
    sed -i 's@http://archive.ubuntu.com/@http://mirror.kakao.com/@' /etc/apt/sources.list
    sed -i 's@http://kr.archive.ubuntu.com/@http://mirror.kakao.com/@' /etc/apt/sources.list
    apt-get update -qq && apt-get upgrade -y
    # apt-get install -y git-core curl zlib1g-dev build-essential libssl-dev libreadline-dev libyaml-dev libsqlite3-dev sqlite3 libxml2-dev libxslt1-dev libcurl4-openssl-dev libffi-dev
    # 신 software-properties-common 구 python-software-properties
  SHELL

  # vagrant plugin
  ## omnibus
  config.omnibus.chef_version = :latest
  # config.omnibus.chef_version = "14.5.33"
  config.omnibus.cache_packages = true
  # config.omnibus.install_url = "./chef-binary/ubuntu/18.04/chef_14.5.33-1_amd64.deb"
  # config.omnibus.install_url = "https://packages.chef.io/stable/windows/2008r2/chef-client-#{config.omnibus.chef_version}-1-x64.msi"
  # https://packages.chef.io/files/stable/chef/14.5.33/ubuntu/18.04/chef_14.5.33-1_amd64.deb

  ## berkshelf
  # config.berkshelf.enabled = true
  # config.berkshelf.berksfile_path = './chef-work/Berksfile'


  # config.vm.provision "chef_zero" do |chef|
  #   # Specify the local paths where Chef data is stored
  #   chef.cookbooks_path = "./devmachine/cookbooks"
  #   chef.data_bags_path = "./devmachine/data_bags"
  #   chef.nodes_path = "./devmachine/nodes"
  #   chef.roles_path = "./devmachine/roles"

  #   # Add a recipe
  #   chef.add_recipe "apache2"

  #   # Or maybe a role
  #   chef.add_role "web"
  # end

  # https://www.vagrantup.com/docs/provisioning/chef_solo.html
  # https://github.com/chef/vagrant-omnibus
  config.vm.provision :chef_solo do |chef|
    chef.cookbooks_path = ['./devmachine/cookbooks','./devmachine/site-cookbooks']
    # chef.cookbooks_path = ['./cookbooks']
    # chef.add_recipe 'apache2'
    # https://stackoverflow.com/questions/15373209/issue-with-chef-knife-bootstrapping-a-vagrant-vm
    # chef.add_recipe 'mysql::server'

    chef.json = {
      "redis": {
        "server": {
          "bind": "0.0.0.0",
          "port": 6379,
          "requirepass": "passw0rd",
          "run_state": "start"
        }
      },
      "blp-redis": {
        "bind": "0.0.0.0",
        "port": 6379,
        "requirepass": "passw0rd",
        "options": {
          "version": "3.2.3",
          "artifact_url": "http://mirror.corporate.com/redis/redis-%{version}.tar.gz"
        }
      },
      "rabbitmq": {
        "default_user": "testuser",
        "default_pass": "passw0rd"
      },
      "erlang": {
        "install_method": "esl"
      }
    }

    chef.run_list = [
        'recipe[apache2]',
        # 'recipe[apache2::mod_php]',
        'recipe[php]',
        # 'recipe[php::module_mysql]'
        # 'recipe[sb-redis]',
        # 'recipe[sb-redis::install_from_package]',
        # 'recipe[sb-redis::server]',
        # 'blp-redis::default',
        # 'recipe[rabbitmq]',
        'recipe[setup-mysql]',
        'recipe[setup-redis]'
    ]
    # chef.
  end
end
